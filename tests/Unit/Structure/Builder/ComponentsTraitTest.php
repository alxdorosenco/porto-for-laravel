<?php

namespace AlxDorosenco\PortoForLaravel\Tests\Unit\Structure\Builder;

use AlxDorosenco\PortoForLaravel\Tests\TestCase;
use AlxDorosenco\PortoForLaravel\Structure\Builder\Components;
use AlxDorosenco\PortoForLaravel\Traits\FilesAndDirectories;

class ComponentsTraitTest extends TestCase
{
    /**
     * @var __anonymous@394
     */
    private $trait;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->trait = new class {
            use FilesAndDirectories;
            use Components {
                getComponent as public;
                getComponentContents as public;
                setComponentVariable as public;
                componentVariablesReplacer as public;
            }
        };
    }

    /**
     * @return array
     */
    public static function provideComponentsFilename(): array
    {
        return [
            'container-api' => ['container-api'],
            'container-cli' => ['container-cli'],
            'container-default' => ['container-default'],
            'container-full' => ['container-full'],
            'container-standard' => ['container-standard'],
            'container-web' => ['container-web'],
            'ship' => ['ship']
        ];
    }

    /**
     * @param string $filename
     *
     * @dataProvider provideComponentsFilename
     * @return void
     */
    public function testGetComponentMethod(string $filename): void
    {
        $componentFile = $this->trait->getComponent($filename);

        $this->assertFileExists($componentFile);
    }

    /**
     * @param string $filename
     *
     * @dataProvider provideComponentsFilename
     * @return void
     */
    public function testGetComponentContentsMethod(string $filename): void
    {
        $component = $this->trait->getComponent($filename);

        $this->assertIsArray(
            $this->trait->getComponentContents($component)
        );
    }

    public function testSetComponentVariableMethod(): void
    {
        $componentVariable = $this->trait->setComponentVariable('class', 'ClassName');

        $this->assertEquals($componentVariable, $this->trait);
    }

    public function testComponentVariablesReplacerMethod(): void
    {
        $str = 'Some {class} from the nowhere';
        $strReplaced = $this->trait->componentVariablesReplacer($str);
        $this->assertEquals($str, $strReplaced);


        $this->trait->setComponentVariable('class', 'ClassName');
        $strReplaced = $this->trait->componentVariablesReplacer($str);

        $this->assertEquals('Some ClassName from the nowhere', $strReplaced);
    }
}
